mbirthplaceUSA <- table(censusUSA$mbpl)
mbirthplaceUSA
# rename all US States to "USA"in the fbpl column
censusUSA <- censusUSA %>% mutate(fbpl=replace(fbpl, fbpl %in% states$States, "USA"))
# rename all values that are not "USA" to "Foreign"
censusUSA$fbpl <- recode(censusUSA$fbpl, USA="USA", .default = "Foreign")
# check if the renaming is successful
# Extract the birthplace of each census participant
fbirthplaceUSA <- table(censusUSA$fbpl)
fbirthplaceUSA
ggplot(data=fbirthplaceUSA) + goem_pie()
x <- censusUSA %>% group_by(fbpl) %>% summarise(n=count())
x <- censusUSA %>% group_by(fbpl) %>% tally()
x
ggplot(data=x) + goem_pie()
ggplot(data=x) + goem_bar()
ggplot(data=x) + geom_bar()
ggplot(data=x, aes(x = fbpl, y = n)) + geom_bar()
ggplot(data=x, aes( y = n)) + geom_bar()
ggplot(data=x, aes( y = n, fill(fbpl))) + geom_bar()
ggplot(data=x, aes( y = n, fill=fbpl) + geom_bar()
ggplot(data=x, aes( y = n, fill=fbpl)) + geom_bar()
ggplot(data=x, aes( y = n, fill=fbpl)) + geom_bar()
ggplot(data=x, aes( y = n, fill=fbpl)) + geom_bar() + coord_polar("y", start=0)
ggplot(data=x, aes( y = n, fill=fbpl)) + geom_bar() + coord_polar("y")
ggplot(data=x, aes( y = n, fill=fbpl)) + geom_bar(stat="identity", width=1) + coord_polar("y")
ggplot(data=x, aes(x = "", y = n, fill=fbpl)) + geom_bar(stat="identity", width=1) + coord_polar("y")
ggplot(data=x, aes(x = "", y = n, fill=fbpl)) + geom_bar(stat="identity", width=1) + coord_polar("y") + theme_void()
x <- censusUSA %>% group_by(fbpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
x
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) + geom_bar(stat="identity", width=1) + coord_polar("y") + theme_void()
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) + geom_bar(stat="identity", width=1) + coord_polar("y") + theme_void() + geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = "Father birthplace"), position = position_stack(vjust = 0.5)) +
l
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = "Father birthplace"), position = position_stack(vjust = 0.5))
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(position = position_stack(vjust = 0.5))
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5))
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
legend(title = "Father birthplace")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
theme(legend.title = "hi")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5))
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
label(title = "hi")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "hi")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "hi",
legend = "bye")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "hi",
colours = "bye")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "hi",
colour = "bye")
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "hi",
fill = "bye")
knitr::opts_chunk$set(echo = TRUE)
x <- censusUSA %>% group_by(fbpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
knitr::opts_chunk$set(echo = TRUE)
newdf <- read.table(file="Census_Data_1880_1930.txt",header=TRUE,sep="\t")
# Extract the birthplace of each census participant
birthplace <- table(newdf$bpl)
#Extract the mother's of each census participants
motherBirthplace <- table(newdf$mbpl)
#Extract the father's of each census participants
fatherBirthplace <- table(newdf$fbpl)
#The birthplace of each participants shown in a pie chart
pie(birthplace)
#The birthplace of each participants shown in a pie chart
pie(motherBirthplace)
#The birthplace of each participants shown in a pie chart
pie(fatherBirthplace)
# importing data
census <- read.table(file="Census_Data_1880_1930.txt",header=TRUE,sep="\t")
# importing dplyr for data cleaning
library(dplyr)
# importing ggplot2 library for graphing
library(ggplot2)
# Extract the birthplace of each census participant
birthplace <- table(census$bpl)
# Plot an pie chart of the participant birthplace
pie(birthplace)
# Importing a list of US States name
states <- read.csv('StatesUSA.csv')
# rename all US States to "USA"in the bpl column
censusUSA <- census %>% mutate(bpl=replace(bpl, bpl %in% states$States, "USA"))
# rename all values that are not "USA" to "Foreign"
censusUSA$bpl <- recode(censusUSA$bpl, USA="USA", .default = "Foreign")
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- table(censusUSA$bpl)
birthplaceUSA
# rename all US States to "USA"in the mbpl column
censusUSA <- censusUSA %>% mutate(mbpl=replace(mbpl, mbpl %in% states$States, "USA"))
# rename all values that are not "USA" to "Foreign"
censusUSA$mbpl <- recode(censusUSA$mbpl, USA="USA", .default = "Foreign")
# check if the renaming is successful
# Extract the birthplace of each census participant
mbirthplaceUSA <- table(censusUSA$mbpl)
mbirthplaceUSA
# rename all US States to "USA"in the fbpl column
censusUSA <- censusUSA %>% mutate(fbpl=replace(fbpl, fbpl %in% states$States, "USA"))
# rename all values that are not "USA" to "Foreign"
censusUSA$fbpl <- recode(censusUSA$fbpl, USA="USA", .default = "Foreign")
# check if the renaming is successful
# Extract the birthplace of each census participant
fbirthplaceUSA <- table(censusUSA$fbpl)
fbirthplaceUSA
x <- censusUSA %>% group_by(fbpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
x
# Pie chart for each participants birthplace
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
# Pie chart for mother birthplace
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
# Pie chart for father birthplace
ggplot(data=x, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
x <- censusUSA %>% group_by(fbpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
x
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
mutate(labels = scales::percent(perc))
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
mutate(labels = scales::percent(perc))
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
mutate(perc = `n` / sum(`n`)) %>%
mutate(labels = scales::percent(perc))
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
mutate(perc = `n` / sum(`n`))
birthplaceUSA
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
mutate(perc = `n` / sum(`n`))
%>%
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
mutate(perc = `n` / sum(`n`)) %>%
mutate(labels = percent(perc))
birthplaceUSA
library(scales)
# check if the renaming is successful
# Extract the birthplace of each census participant
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
mutate(perc = `n` / sum(`n`)) %>%
mutate(labels = percent(perc))
birthplaceUSA
mbirthplaceUSA
# group by the birthplace and count
mbirthplaceUSA <- censusUSA %>% group_by(nbpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc))
# group by the birthplace and count
mbirthplaceUSA <- censusUSA %>% group_by(mbpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc))
mbirthplaceUSA
mbirthplaceUSA
# group by the birthplace and count
mbirthplaceUSA <- censusUSA %>% group_by(mbpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc))
mbirthplaceUSA
birthplaceUSA
fbirthplaceUSA
mbirthplaceUSA
# group by the birthplace and count
fbirthplaceUSA <- censusUSA %>% group_by(fbpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc))
fbirthplaceUSA
# Pie chart for each participants birthplace
ggplot(data=birthplaceUSA, aes(x = "", y = perc, fill=bpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' birthplace", fill = "Birthplace")
# Pie chart for mother birthplace
ggplot(data=mbirthplaceUSA, aes(x = "", y = perc, fill=mbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
# Pie chart for father birthplace
ggplot(data=fbirthplaceUSA, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
mbirthplaceUSA
view(mbirthplaceUSA)
head(mbirthplaceUSA)
birthplaceUSA1 <- birthplaceUSA %>% mutate(labels = scales::percent_format(perc))
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent_format(perc))
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent_format(accuracy = 0.1L))
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent_format(accuracy = 0.2))
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(percentage = scales::percent_format(accuracy = 0.2))
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc))
birthplaceUSA
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 1L))
birthplaceUSA
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 0.1L))
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 0.1))
birthplaceUSA
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 5))
birthplaceUSA
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 0.01))
birthplaceUSA
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 0.1))
birthplaceUSA
# group by the birthplace and count
birthplaceUSA <- censusUSA %>% group_by(bpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
#mutate(labels = scales::percent(perc))
mutate(labels = scales::percent(perc, accuracy = 0.01))
birthplaceUSA
# Pie chart for each participants birthplace
ggplot(data=birthplaceUSA, aes(x = "", y = perc, fill=bpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' birthplace", fill = "Birthplace")
# Pie chart for each participants birthplace
ggplot(data=birthplaceUSA, aes(x = "", y = perc, fill=bpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' birthplace", fill = "Birthplace")
# Pie chart for mother birthplace
ggplot(data=mbirthplaceUSA, aes(x = "", y = perc, fill=mbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' mother birthplace", fill = "Birthplace")
# Pie chart for father birthplace
ggplot(data=fbirthplaceUSA, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
coord_polar("y") + theme_void() +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
# Pie chart for each participants birthplace
ggplot(data=birthplaceUSA, aes(x = "", y = perc, fill=bpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' birthplace", fill = "Birthplace")
# Pie chart for mother birthplace
ggplot(data=mbirthplaceUSA, aes(x = "", y = perc, fill=mbpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' mother birthplace", fill = "Birthplace")
# Pie chart for father birthplace
ggplot(data=fbirthplaceUSA, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
# rename all US States to "USA"in the mbpl column
censusUSA <- censusUSA %>% mutate(mbpl=replace(mbpl, mbpl %in% states$States, "USA"))
# rename all values that are not "USA" to "Foreign"
censusUSA$mbpl <- recode(censusUSA$mbpl, USA="USA", .default = "Foreign")
# group by the birthplace and count
mbirthplaceUSA <- censusUSA %>% group_by(mbpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc, accuracy = 0.01))
mbirthplaceUSA
# rename all US States to "USA"in the fbpl column
censusUSA <- censusUSA %>% mutate(fbpl=replace(fbpl, fbpl %in% states$States, "USA"))
# rename all values that are not "USA" to "Foreign"
censusUSA$fbpl <- recode(censusUSA$fbpl, USA="USA", .default = "Foreign")
# group by the birthplace and count
fbirthplaceUSA <- censusUSA %>% group_by(fbpl) %>% tally() %>%
# calculate the percentage per group
mutate(perc = `n` / sum(`n`)) %>%
# convert to percent format
mutate(labels = scales::percent(perc , accuracy = 0.01))
fbirthplaceUSA
# Pie chart for each participants birthplace
ggplot(data=birthplaceUSA, aes(x = "", y = perc, fill=bpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' birthplace", fill = "Birthplace")
# Pie chart for mother birthplace
ggplot(data=mbirthplaceUSA, aes(x = "", y = perc, fill=mbpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' mother birthplace", fill = "Birthplace")
# Pie chart for father birthplace
ggplot(data=fbirthplaceUSA, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Each participants' father birthplace", fill = "Birthplace")
# Pie chart for each participants birthplace
ggplot(data=birthplaceUSA, aes(x = "", y = perc, fill=bpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Percentage of participants' birthplace",
subtitle = "census data from the 1880 to 1830",
fill = "Birthplace")
# Pie chart for mother birthplace
ggplot(data=mbirthplaceUSA, aes(x = "", y = perc, fill=mbpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Percentage of participants' mother birthplace",
subtitle = "census data from the 1880 to 1830",
fill = "Birthplace")
# Pie chart for father birthplace
ggplot(data=fbirthplaceUSA, aes(x = "", y = perc, fill=fbpl)) +
geom_bar(stat="identity", width=1) +
# creates the pie chart and remove the theme
coord_polar("y") + theme_void() +
# overlay percentage values to the corresponding categories
geom_text(aes(label = labels), position = position_stack(vjust = 0.5)) +
labs(title = "Percentage of participants' father birthplace",
subtitle = "census data from the 1880 to 1830",
fill = "Birthplace")
